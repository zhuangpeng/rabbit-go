// Code generated by goctl. DO NOT EDIT.
package types

type UserInfo struct {
	BaseInfo
	Status      uint32 `json:"status,optional"`
	Username    string `json:"username,optional"`
	Nickname    string `json:"nickname,optional"`
	Password    string `json:"password,optional"`
	Description string `json:"description,optional"`
	HomePath    string `json:"homePath,optional"`
	RoleId      uint64 `json:"roleId,optional"`
	Mobile      string `json:"mobile,optional"`
	Email       string `json:"email,optional"`
	Avatar      string `json:"avatar,optional"`
}

type RegisterReq struct {
	Username  string `json:"username" validate:"alphanum,max=20"`
	Nickname  string `json:"nickname" validate:"max=20"`
	Password  string `json:"password" validate:"max=30,min=6"`
	CaptchaId string `json:"captchaId" validate:"len=20"`
	Captcha   string `json:"captcha" validate:"len=5"`
	Email     string `json:"email" validate:"email,max=100"`
	Mobile    string `json:"mobile"`
}

type BaseDataInfo struct {
	Code int    `json:"code"`
	Msg  string `json:"msg"`
	Data string `json:"data,omitempty"`
}

type BaseListInfo struct {
	Total uint64 `json:"total"`
	Data  string `json:"data,omitempty"`
}

type BaseMsgResp struct {
	Code int    `json:"code"`
	Msg  string `json:"msg"`
}

type SimpleMsg struct {
	Msg string `json:"msg"`
}

type PageInfo struct {
	Page     uint64 `json:"page" validate:"number"`
	PageSize uint64 `json:"pageSize" validate:"number,max=100000"`
}

type IDReq struct {
	Id string `json:"id" validate:"len=36"`
}

type IDsReq struct {
	Ids []string `json:"ids"`
}

type IDPathReq struct {
	Id uint64 `path:"id"`
}

type BaseInfo struct {
	Id        string `json:"id"`
	CreatedAt int64  `json:"createdAt,optional"`
	UpdatedAt int64  `json:"updatedAt,optional"`
	DeleteAt  int64  `json:"deletedAt,optional"`
}
