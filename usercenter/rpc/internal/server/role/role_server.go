// Code generated by goctl. DO NOT EDIT!
// Source: usercenter.proto

package server

import (
	"context"

	"github.com/zhuangpeng/rabbit-go/usercenter/rpc/internal/logic/role"
	"github.com/zhuangpeng/rabbit-go/usercenter/rpc/internal/svc"
	"github.com/zhuangpeng/rabbit-go/usercenter/rpc/pb"
)

type RoleServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedRoleServer
}

func NewRoleServer(svcCtx *svc.ServiceContext) *RoleServer {
	return &RoleServer{
		svcCtx: svcCtx,
	}
}

func (s *RoleServer) CreateRole(ctx context.Context, in *pb.CreateRoleReq) (*pb.BaseResp, error) {
	l := rolelogic.NewCreateRoleLogic(ctx, s.svcCtx)
	return l.CreateRole(in)
}

func (s *RoleServer) DeleteRole(ctx context.Context, in *pb.IDReq) (*pb.BaseResp, error) {
	l := rolelogic.NewDeleteRoleLogic(ctx, s.svcCtx)
	return l.DeleteRole(in)
}

func (s *RoleServer) UpdateRole(ctx context.Context, in *pb.UpdateRoleReq) (*pb.BaseResp, error) {
	l := rolelogic.NewUpdateRoleLogic(ctx, s.svcCtx)
	return l.UpdateRole(in)
}

func (s *RoleServer) GetRole(ctx context.Context, in *pb.IDReq) (*pb.GetRoleResp, error) {
	l := rolelogic.NewGetRoleLogic(ctx, s.svcCtx)
	return l.GetRole(in)
}

func (s *RoleServer) GrantMenuToRole(ctx context.Context, in *pb.GrantMenuToRoleReq) (*pb.BaseResp, error) {
	l := rolelogic.NewGrantMenuToRoleLogic(ctx, s.svcCtx)
	return l.GrantMenuToRole(in)
}

func (s *RoleServer) GrantApiToRole(ctx context.Context, in *pb.GrantApiToRoleReq) (*pb.BaseResp, error) {
	l := rolelogic.NewGrantApiToRoleLogic(ctx, s.svcCtx)
	return l.GrantApiToRole(in)
}

func (s *RoleServer) GrantRoleToStation(ctx context.Context, in *pb.GrantRoleToStationReq) (*pb.BaseResp, error) {
	l := rolelogic.NewGrantRoleToStationLogic(ctx, s.svcCtx)
	return l.GrantRoleToStation(in)
}

func (s *RoleServer) GetRoleList(ctx context.Context, in *pb.PageInfoReq) (*pb.RoleListResp, error) {
	l := rolelogic.NewGetRoleListLogic(ctx, s.svcCtx)
	return l.GetRoleList(in)
}
