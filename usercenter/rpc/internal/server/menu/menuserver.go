// Code generated by goctl. DO NOT EDIT!
// Source: usercenter.proto

package server

import (
	"context"

	"github.com/zhuangpeng/rabbit-go/usercenter/rpc/internal/logic/menu"
	"github.com/zhuangpeng/rabbit-go/usercenter/rpc/internal/svc"
	"github.com/zhuangpeng/rabbit-go/usercenter/rpc/pb"
)

type MenuServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedMenuServer
}

func NewMenuServer(svcCtx *svc.ServiceContext) *MenuServer {
	return &MenuServer{
		svcCtx: svcCtx,
	}
}

func (s *MenuServer) CreateOrUpdateMenu(ctx context.Context, in *pb.CreateOrUpdateMenuReq) (*pb.BaseResp, error) {
	l := menulogic.NewCreateOrUpdateMenuLogic(ctx, s.svcCtx)
	return l.CreateOrUpdateMenu(in)
}

func (s *MenuServer) DeleteMenu(ctx context.Context, in *pb.IDReq) (*pb.BaseResp, error) {
	l := menulogic.NewDeleteMenuLogic(ctx, s.svcCtx)
	return l.DeleteMenu(in)
}

func (s *MenuServer) GetMenuListByRole(ctx context.Context, in *pb.IDReq) (*pb.MenuInfoList, error) {
	l := menulogic.NewGetMenuListByRoleLogic(ctx, s.svcCtx)
	return l.GetMenuListByRole(in)
}

func (s *MenuServer) GetMenuList(ctx context.Context, in *pb.PageInfoReq) (*pb.MenuInfoList, error) {
	l := menulogic.NewGetMenuListLogic(ctx, s.svcCtx)
	return l.GetMenuList(in)
}

func (s *MenuServer) CreateOrUpdateMenuParam(ctx context.Context, in *pb.CreateOrUpdateMenuParamReq) (*pb.BaseResp, error) {
	l := menulogic.NewCreateOrUpdateMenuParamLogic(ctx, s.svcCtx)
	return l.CreateOrUpdateMenuParam(in)
}

func (s *MenuServer) DeleteMenuParam(ctx context.Context, in *pb.IDReq) (*pb.BaseResp, error) {
	l := menulogic.NewDeleteMenuParamLogic(ctx, s.svcCtx)
	return l.DeleteMenuParam(in)
}

func (s *MenuServer) GetMenuParamListByMenuId(ctx context.Context, in *pb.IDReq) (*pb.MenuParamListResp, error) {
	l := menulogic.NewGetMenuParamListByMenuIdLogic(ctx, s.svcCtx)
	return l.GetMenuParamListByMenuId(in)
}
