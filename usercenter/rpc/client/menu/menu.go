// Code generated by goctl. DO NOT EDIT!
// Source: usercenter.proto

package client

import (
	"context"

	"github.com/zhuangpeng/rabbit-go/usercenter/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ApiInfo               = pb.ApiInfo
	BaseResp              = pb.BaseResp
	BatchCreateUserReq    = pb.BatchCreateUserReq
	ChangeDept            = pb.ChangeDept
	ChangePasswdReq       = pb.ChangePasswdReq
	ChangePositionReq     = pb.ChangePositionReq
	CreateApiReq          = pb.CreateApiReq
	CreateMenuParamReq    = pb.CreateMenuParamReq
	CreateMenuReq         = pb.CreateMenuReq
	CreateRoleReq         = pb.CreateRoleReq
	CreateStationReq      = pb.CreateStationReq
	CreateTenantReq       = pb.CreateTenantReq
	CreateTokenReq        = pb.CreateTokenReq
	CreateUserReq         = pb.CreateUserReq
	Empty                 = pb.Empty
	GetApiListResp        = pb.GetApiListResp
	GetApiResp            = pb.GetApiResp
	GetMenuListReq        = pb.GetMenuListReq
	GetMenuListResp       = pb.GetMenuListResp
	GetParamsByMenuResp   = pb.GetParamsByMenuResp
	GetRoleResp           = pb.GetRoleResp
	GetStationByUserResp  = pb.GetStationByUserResp
	GetStationListResp    = pb.GetStationListResp
	GetStationResp        = pb.GetStationResp
	GetTeantListResp      = pb.GetTeantListResp
	GetTenantResp         = pb.GetTenantResp
	GetTokenListReq       = pb.GetTokenListReq
	GetTokenListResp      = pb.GetTokenListResp
	GetTokenResp          = pb.GetTokenResp
	GrantApiToRoleReq     = pb.GrantApiToRoleReq
	GrantMenuToRoleReq    = pb.GrantMenuToRoleReq
	GrantMenusToRoleReq   = pb.GrantMenusToRoleReq
	GrantRoleReq          = pb.GrantRoleReq
	GrantRoleToStationReq = pb.GrantRoleToStationReq
	IDReq                 = pb.IDReq
	IDResp                = pb.IDResp
	IDsReq                = pb.IDsReq
	IDsResp               = pb.IDsResp
	LoginReq              = pb.LoginReq
	LoginResp             = pb.LoginResp
	MenuInfo              = pb.MenuInfo
	MenuParamInfo         = pb.MenuParamInfo
	Meta                  = pb.Meta
	PageInfoReq           = pb.PageInfoReq
	ReplaceUserReq        = pb.ReplaceUserReq
	RoleInfo              = pb.RoleInfo
	RoleListResp          = pb.RoleListResp
	StationInfo           = pb.StationInfo
	StationUserReq        = pb.StationUserReq
	StatusCodeReq         = pb.StatusCodeReq
	TSRU                  = pb.TSRU
	TenantInfo            = pb.TenantInfo
	TokenInfo             = pb.TokenInfo
	UpdateApiReq          = pb.UpdateApiReq
	UpdateMenuParamsReq   = pb.UpdateMenuParamsReq
	UpdateMenuReq         = pb.UpdateMenuReq
	UpdatePeriodReq       = pb.UpdatePeriodReq
	UpdateProfileReq      = pb.UpdateProfileReq
	UpdateRoleReq         = pb.UpdateRoleReq
	UpdateStationReq      = pb.UpdateStationReq
	UpdateStatusReq       = pb.UpdateStatusReq
	UpdateTenantReq       = pb.UpdateTenantReq
	UserInfoResp          = pb.UserInfoResp
	UserListResp          = pb.UserListResp

	Menu interface {
		CreateMenu(ctx context.Context, in *CreateMenuReq, opts ...grpc.CallOption) (*BaseResp, error)
		UpdateMenu(ctx context.Context, in *UpdateMenuReq, opts ...grpc.CallOption) (*BaseResp, error)
		DeleteMenu(ctx context.Context, in *IDReq, opts ...grpc.CallOption) (*BaseResp, error)
		CreateMenuParam(ctx context.Context, in *CreateMenuParamReq, opts ...grpc.CallOption) (*BaseResp, error)
		DeleteParams(ctx context.Context, in *IDReq, opts ...grpc.CallOption) (*BaseResp, error)
		GetMenuList(ctx context.Context, in *GetMenuListReq, opts ...grpc.CallOption) (*GetMenuListResp, error)
		GetParamsByMenu(ctx context.Context, in *IDReq, opts ...grpc.CallOption) (*GetParamsByMenuResp, error)
		UpdateMenuParams(ctx context.Context, in *UpdateMenuParamsReq, opts ...grpc.CallOption) (*BaseResp, error)
	}

	defaultMenu struct {
		cli zrpc.Client
	}
)

func NewMenu(cli zrpc.Client) Menu {
	return &defaultMenu{
		cli: cli,
	}
}

func (m *defaultMenu) CreateMenu(ctx context.Context, in *CreateMenuReq, opts ...grpc.CallOption) (*BaseResp, error) {
	client := pb.NewMenuClient(m.cli.Conn())
	return client.CreateMenu(ctx, in, opts...)
}

func (m *defaultMenu) UpdateMenu(ctx context.Context, in *UpdateMenuReq, opts ...grpc.CallOption) (*BaseResp, error) {
	client := pb.NewMenuClient(m.cli.Conn())
	return client.UpdateMenu(ctx, in, opts...)
}

func (m *defaultMenu) DeleteMenu(ctx context.Context, in *IDReq, opts ...grpc.CallOption) (*BaseResp, error) {
	client := pb.NewMenuClient(m.cli.Conn())
	return client.DeleteMenu(ctx, in, opts...)
}

func (m *defaultMenu) CreateMenuParam(ctx context.Context, in *CreateMenuParamReq, opts ...grpc.CallOption) (*BaseResp, error) {
	client := pb.NewMenuClient(m.cli.Conn())
	return client.CreateMenuParam(ctx, in, opts...)
}

func (m *defaultMenu) DeleteParams(ctx context.Context, in *IDReq, opts ...grpc.CallOption) (*BaseResp, error) {
	client := pb.NewMenuClient(m.cli.Conn())
	return client.DeleteParams(ctx, in, opts...)
}

func (m *defaultMenu) GetMenuList(ctx context.Context, in *GetMenuListReq, opts ...grpc.CallOption) (*GetMenuListResp, error) {
	client := pb.NewMenuClient(m.cli.Conn())
	return client.GetMenuList(ctx, in, opts...)
}

func (m *defaultMenu) GetParamsByMenu(ctx context.Context, in *IDReq, opts ...grpc.CallOption) (*GetParamsByMenuResp, error) {
	client := pb.NewMenuClient(m.cli.Conn())
	return client.GetParamsByMenu(ctx, in, opts...)
}

func (m *defaultMenu) UpdateMenuParams(ctx context.Context, in *UpdateMenuParamsReq, opts ...grpc.CallOption) (*BaseResp, error) {
	client := pb.NewMenuClient(m.cli.Conn())
	return client.UpdateMenuParams(ctx, in, opts...)
}
