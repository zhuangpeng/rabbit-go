// Code generated by goctl. DO NOT EDIT!
// Source: usercenter.proto

package server

import (
	"context"

	"github.com/zhuangpeng/rabbit-go/usercenter/rpc/internal/logic/role"
	"github.com/zhuangpeng/rabbit-go/usercenter/rpc/internal/svc"
	"github.com/zhuangpeng/rabbit-go/usercenter/rpc/pb"
)

type RoleServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedRoleServer
}

func NewRoleServer(svcCtx *svc.ServiceContext) *RoleServer {
	return &RoleServer{
		svcCtx: svcCtx,
	}
}

func (s *RoleServer) CreateOrUpdateRole(ctx context.Context, in *pb.RoleInfo) (*pb.BaseResp, error) {
	l := rolelogic.NewCreateOrUpdateRoleLogic(ctx, s.svcCtx)
	return l.CreateOrUpdateRole(in)
}

func (s *RoleServer) DeleteRole(ctx context.Context, in *pb.IDReq) (*pb.BaseResp, error) {
	l := rolelogic.NewDeleteRoleLogic(ctx, s.svcCtx)
	return l.DeleteRole(in)
}

func (s *RoleServer) GetRoleById(ctx context.Context, in *pb.IDReq) (*pb.RoleInfo, error) {
	l := rolelogic.NewGetRoleByIdLogic(ctx, s.svcCtx)
	return l.GetRoleById(in)
}

func (s *RoleServer) GetRoleList(ctx context.Context, in *pb.PageInfoReq) (*pb.RoleListResp, error) {
	l := rolelogic.NewGetRoleListLogic(ctx, s.svcCtx)
	return l.GetRoleList(in)
}

func (s *RoleServer) UpdateRoleStatus(ctx context.Context, in *pb.StatusCodeReq) (*pb.BaseResp, error) {
	l := rolelogic.NewUpdateRoleStatusLogic(ctx, s.svcCtx)
	return l.UpdateRoleStatus(in)
}
