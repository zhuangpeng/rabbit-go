// Code generated by goctl. DO NOT EDIT!
// Source: usercenter.proto

package server

import (
	"context"

	"github.com/zhuangpeng/rabbit-go/usercenter/rpc/internal/logic/tenant"
	"github.com/zhuangpeng/rabbit-go/usercenter/rpc/internal/svc"
	"github.com/zhuangpeng/rabbit-go/usercenter/rpc/pb"
)

type TenantServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedTenantServer
}

func NewTenantServer(svcCtx *svc.ServiceContext) *TenantServer {
	return &TenantServer{
		svcCtx: svcCtx,
	}
}

func (s *TenantServer) CreateTenant(ctx context.Context, in *pb.CreateTenantReq) (*pb.BaseResp, error) {
	l := tenantlogic.NewCreateTenantLogic(ctx, s.svcCtx)
	return l.CreateTenant(in)
}

func (s *TenantServer) DeleteTenant(ctx context.Context, in *pb.IDReq) (*pb.BaseResp, error) {
	l := tenantlogic.NewDeleteTenantLogic(ctx, s.svcCtx)
	return l.DeleteTenant(in)
}

func (s *TenantServer) UpdateTenant(ctx context.Context, in *pb.UpdateTenantReq) (*pb.BaseResp, error) {
	l := tenantlogic.NewUpdateTenantLogic(ctx, s.svcCtx)
	return l.UpdateTenant(in)
}

func (s *TenantServer) GetTenant(ctx context.Context, in *pb.IDReq) (*pb.GetTenantResp, error) {
	l := tenantlogic.NewGetTenantLogic(ctx, s.svcCtx)
	return l.GetTenant(in)
}

func (s *TenantServer) GrantMenuToRole(ctx context.Context, in *pb.GrantMenusToRoleReq) (*pb.BaseResp, error) {
	l := tenantlogic.NewGrantMenuToRoleLogic(ctx, s.svcCtx)
	return l.GrantMenuToRole(in)
}

func (s *TenantServer) UpdateTenantPeriod(ctx context.Context, in *pb.UpdatePeriodReq) (*pb.BaseResp, error) {
	l := tenantlogic.NewUpdateTenantPeriodLogic(ctx, s.svcCtx)
	return l.UpdateTenantPeriod(in)
}

func (s *TenantServer) UpdateTenantStatus(ctx context.Context, in *pb.UpdateStatusReq) (*pb.BaseResp, error) {
	l := tenantlogic.NewUpdateTenantStatusLogic(ctx, s.svcCtx)
	return l.UpdateTenantStatus(in)
}

func (s *TenantServer) GetTenantList(ctx context.Context, in *pb.IDReq) (*pb.GetTeantListResp, error) {
	l := tenantlogic.NewGetTenantListLogic(ctx, s.svcCtx)
	return l.GetTenantList(in)
}
